var _user$project$Main$noDupes = function (xs) {
	noDupes:
	while (true) {
		var _p0 = xs;
		if (_p0.ctor === '[]') {
			return {ctor: '[]'};
		} else {
			if (_p0._1.ctor === '[]') {
				return {
					ctor: '::',
					_0: _p0._0,
					_1: {ctor: '[]'}
				};
			} else {
				var _p3 = _p0._1._1;
				var _p2 = _p0._1._0;
				var _p1 = _p0._0;
				if (_elm_lang$core$Native_Utils.eq(_p1, _p2)) {
					var _v1 = {ctor: '::', _0: _p1, _1: _p3};
					xs = _v1;
					continue noDupes;
				} else {
					return {
						ctor: '::',
						_0: _p1,
						_1: _user$project$Main$noDupes(
							{ctor: '::', _0: _p2, _1: _p3})
					};
				}
			}
		}
	}
};
var _user$project$Main$test = _elm_lang$core$List$length(
	A2(
		_elm_lang$core$List$filter,
		F2(
			function (x, y) {
				return _elm_lang$core$Native_Utils.eq(x, y);
			})(false),
		{
			ctor: '::',
			_0: _elm_lang$core$Native_Utils.eq(
				_user$project$Main$noDupes(
					{
						ctor: '::',
						_0: 1,
						_1: {
							ctor: '::',
							_0: 1,
							_1: {
								ctor: '::',
								_0: 1,
								_1: {
									ctor: '::',
									_0: 1,
									_1: {
										ctor: '::',
										_0: 2,
										_1: {
											ctor: '::',
											_0: 5,
											_1: {
												ctor: '::',
												_0: 5,
												_1: {
													ctor: '::',
													_0: 2,
													_1: {
														ctor: '::',
														_0: 1,
														_1: {ctor: '[]'}
													}
												}
											}
										}
									}
								}
							}
						}
					}),
				{
					ctor: '::',
					_0: 1,
					_1: {
						ctor: '::',
						_0: 2,
						_1: {
							ctor: '::',
							_0: 5,
							_1: {
								ctor: '::',
								_0: 2,
								_1: {
									ctor: '::',
									_0: 1,
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}),
			_1: {
				ctor: '::',
				_0: _elm_lang$core$Native_Utils.eq(
					_user$project$Main$noDupes(
						{
							ctor: '::',
							_0: 2,
							_1: {
								ctor: '::',
								_0: 1,
								_1: {
									ctor: '::',
									_0: 1,
									_1: {
										ctor: '::',
										_0: 1,
										_1: {ctor: '[]'}
									}
								}
							}
						}),
					{
						ctor: '::',
						_0: 2,
						_1: {
							ctor: '::',
							_0: 1,
							_1: {ctor: '[]'}
						}
					}),
				_1: {
					ctor: '::',
					_0: _elm_lang$core$Native_Utils.eq(
						_user$project$Main$noDupes(
							{
								ctor: '::',
								_0: 2,
								_1: {
									ctor: '::',
									_0: 2,
									_1: {
										ctor: '::',
										_0: 2,
										_1: {
											ctor: '::',
											_0: 1,
											_1: {
												ctor: '::',
												_0: 1,
												_1: {
													ctor: '::',
													_0: 1,
													_1: {ctor: '[]'}
												}
											}
										}
									}
								}
							}),
						{
							ctor: '::',
							_0: 2,
							_1: {
								ctor: '::',
								_0: 1,
								_1: {ctor: '[]'}
							}
						}),
					_1: {
						ctor: '::',
						_0: _elm_lang$core$Native_Utils.eq(
							_user$project$Main$noDupes(
								{
									ctor: '::',
									_0: 1,
									_1: {ctor: '[]'}
								}),
							{
								ctor: '::',
								_0: 1,
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: _elm_lang$core$Native_Utils.eq(
								_user$project$Main$noDupes(
									{ctor: '[]'}),
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: _elm_lang$core$Native_Utils.eq(
									_user$project$Main$noDupes(
										{
											ctor: '::',
											_0: 'aa',
											_1: {
												ctor: '::',
												_0: 'aa',
												_1: {
													ctor: '::',
													_0: 'aa',
													_1: {ctor: '[]'}
												}
											}
										}),
									{
										ctor: '::',
										_0: 'aa',
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: _elm_lang$core$Native_Utils.eq(
										_user$project$Main$noDupes(
											{
												ctor: '::',
												_0: 'aab',
												_1: {
													ctor: '::',
													_0: 'b',
													_1: {
														ctor: '::',
														_0: 'b',
														_1: {
															ctor: '::',
															_0: 'aa',
															_1: {ctor: '[]'}
														}
													}
												}
											}),
										{
											ctor: '::',
											_0: 'aab',
											_1: {
												ctor: '::',
												_0: 'b',
												_1: {
													ctor: '::',
													_0: 'aa',
													_1: {ctor: '[]'}
												}
											}
										}),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}
		}));
var _user$project$Main$main = _elm_lang$virtual_dom$Native_VirtualDom.staticProgram(
	_elm_lang$html$Html$text(
		function () {
			var _p4 = _user$project$Main$test;
			switch (_p4) {
				case 0:
					return 'Your implementation passed all tests.';
				case 1:
					return 'Your implementation failed one test.';
				default:
					return A2(
						_elm_lang$core$Basics_ops['++'],
						'Your implementation failed ',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(_p4),
							' tests.'));
			}
		}()));
