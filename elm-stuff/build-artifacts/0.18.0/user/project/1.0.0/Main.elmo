var _user$project$Main$listrange = F2(
	function (start, end) {
		return A2(_elm_lang$core$List$range, start, end);
	});
var _user$project$Main$last = function (xs) {
	return _elm_lang$core$List$head(
		_elm_lang$core$List$reverse(xs));
};
var _user$project$Main$test = _elm_lang$core$List$length(
	A2(
		_elm_lang$core$List$filter,
		F2(
			function (x, y) {
				return _elm_lang$core$Native_Utils.eq(x, y);
			})(false),
		{
			ctor: '::',
			_0: _elm_lang$core$Native_Utils.eq(
				_user$project$Main$last(
					A2(_user$project$Main$listrange, 1, 4)),
				_elm_lang$core$Maybe$Just(4)),
			_1: {
				ctor: '::',
				_0: _elm_lang$core$Native_Utils.eq(
					_user$project$Main$last(
						{
							ctor: '::',
							_0: 1,
							_1: {ctor: '[]'}
						}),
					_elm_lang$core$Maybe$Just(1)),
				_1: {
					ctor: '::',
					_0: _elm_lang$core$Native_Utils.eq(
						_user$project$Main$last(
							{ctor: '[]'}),
						_elm_lang$core$Maybe$Nothing),
					_1: {
						ctor: '::',
						_0: _elm_lang$core$Native_Utils.eq(
							_user$project$Main$last(
								{
									ctor: '::',
									_0: _elm_lang$core$Native_Utils.chr('a'),
									_1: {
										ctor: '::',
										_0: _elm_lang$core$Native_Utils.chr('b'),
										_1: {
											ctor: '::',
											_0: _elm_lang$core$Native_Utils.chr('c'),
											_1: {ctor: '[]'}
										}
									}
								}),
							_elm_lang$core$Maybe$Just(
								_elm_lang$core$Native_Utils.chr('c'))),
						_1: {ctor: '[]'}
					}
				}
			}
		}));
var _user$project$Main$main = _elm_lang$virtual_dom$Native_VirtualDom.staticProgram(
	_elm_lang$html$Html$text(
		function () {
			var _p0 = _user$project$Main$test;
			switch (_p0) {
				case 0:
					return 'Your implementation passed all tests.';
				case 1:
					return 'Your implementation failed one test.';
				default:
					return A2(
						_elm_lang$core$Basics_ops['++'],
						'Your implementation failed ',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(_p0),
							' tests.'));
			}
		}()));
